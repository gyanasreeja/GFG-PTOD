Form the Largest Number
Difficulty: MediumAccuracy: 37.82%Submissions: 174K+Points: 4
Given an array of integers arr[] representing non-negative integers, arrange them so that after concatenating all of them in order, it results in the largest possible number. Since the result may be very large, return it as a string.

Examples:

Input: arr[] = [3, 30, 34, 5, 9]
Output: 9534330
Explanation: Given numbers are [3, 30, 34, 5, 9], the arrangement [9, 5, 34, 3, 30] gives the largest value.
Input: arr[] = [54, 546, 548, 60]
Output: 6054854654
Explanation: Given numbers are [54, 546, 548, 60], the arrangement [60, 548, 546, 54] gives the largest value.
Input: arr[] = [3, 4, 6, 5, 9]
Output: 96543
Explanation: Given numbers are [3, 4, 6, 5, 9], the arrangement [9, 6, 5, 4, 3] gives the largest value.
Constraints:
1 ≤ arr.size() ≤ 105
0 ≤ arr[i] ≤ 105
Soluction:
class Solution:

	def findLargest(self, arr):
	    str_arr = [str(num) for num in arr]
        
        # Custom comparator function
        def compare(a, b):
            # Compare a+b vs b+a
            if a + b > b + a:
                return -1  # a should come before b
            elif a + b < b + a:
                return 1   # b should come before a
            else:
                return 0   # order doesn't matter
        
        # Sort using the custom comparator
        str_arr.sort(key=cmp_to_key(compare))
        
        # Handle edge case where all numbers are 0
        # If the largest number after sorting is "0", return "0"
        if str_arr[0] == "0":
            return "0"
        
        # Join all strings to form the result
        return ''.join(str_arr)
